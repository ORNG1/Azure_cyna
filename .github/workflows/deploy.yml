name: Pipeline CI/CD AKS

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: vswsh/cyna
  IMAGE_TAG: nginx-aks

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Login to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build Docker image
      run: docker build -t $IMAGE_NAME:$IMAGE_TAG ./Docker

    - name: Push Docker image
      run: docker push $IMAGE_NAME:$IMAGE_TAG

  deploy-to-test:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
    - name: Set up Kubeconfig
      run: |
        echo "${{ secrets.KUBECONFIG_TEST }}" | base64 -d > kubeconfig
        export KUBECONFIG=$PWD/kubeconfig

    - name: Deploy to test namespace
      run: kubectl apply -f ./Kubernetes/deploy-test.yaml

    - name: Wait for pods
      run: kubectl rollout status deployment nginx-app -n testing

  test-application:
    runs-on: ubuntu-latest
    needs: deploy-to-test

    steps:
    - name: Get test service IP
      run: |
        echo "${{ secrets.KUBECONFIG_TEST }}" | base64 -d > kubeconfig
        export KUBECONFIG=$PWD/kubeconfig
        IP=$(kubectl get svc nginx-app-service -n testing -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
        echo "SERVICE_IP=$IP" >> $GITHUB_ENV

    - name: Wait and test with curl
      run: |
        sleep 30
        curl --retry 5 --retry-delay 5 http://$SERVICE_IP | grep "Bienvenue"

  deploy-to-prod:
    runs-on: ubuntu-latest
    needs: test-application

    steps:
    - name: Set up Kubeconfig
      run: |
        echo "${{ secrets.KUBECONFIG_PROD }}" | base64 -d > kubeconfig
        export KUBECONFIG=$PWD/kubeconfig

    - name: Deploy to production
      run: kubectl apply -f ./Kubernetes/deploy.yaml